function [model] = BuildSim(pro_path,x_well,y_well,task_num,sample_num)
%
% use_for_maml.m
%
% Model exported on Nov 30 2024, 19:14 by COMSOL 6.2.0.290.
import com.comsol.model.*
import com.comsol.model.util.*

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

% model.modelPath('F:\dlz');

% model.label('use_for_maml.mph');

savedir=strcat("labels\task",task_num);
mkdir(savedir);
savedir=strcat(savedir,"\");

model.title([native2unicode(hex2dec({'57' '30'}), 'unicode')  native2unicode(hex2dec({'8d' '28'}), 'unicode')  native2unicode(hex2dec({'67' '84'}), 'unicode')  native2unicode(hex2dec({'90' '20'}), 'unicode')  native2unicode(hex2dec({'4e' '2d'}), 'unicode')  native2unicode(hex2dec({'76' '84'}), 'unicode')  native2unicode(hex2dec({'4e' '8c'}), 'unicode')  native2unicode(hex2dec({'6c' '27'}), 'unicode')  native2unicode(hex2dec({'53' '16'}), 'unicode')  native2unicode(hex2dec({'78' 'b3'}), 'unicode')  native2unicode(hex2dec({'50' 'a8'}), 'unicode')  native2unicode(hex2dec({'5b' '58'}), 'unicode') ]);

model.description([native2unicode(hex2dec({'67' '2c'}), 'unicode')  native2unicode(hex2dec({'4f' '8b'}), 'unicode')  native2unicode(hex2dec({'6a' '21'}), 'unicode')  native2unicode(hex2dec({'62' 'df'}), 'unicode')  native2unicode(hex2dec({'63' '2a'}), 'unicode')  native2unicode(hex2dec({'5a' '01'}), 'unicode')  native2unicode(hex2dec({'6d' '77'}), 'unicode')  native2unicode(hex2dec({'5c' 'b8'}), 'unicode')  native2unicode(hex2dec({'90' 'e8'}), 'unicode')  native2unicode(hex2dec({'52' '06'}), 'unicode') ' Johansen ' native2unicode(hex2dec({'57' '30'}), 'unicode')  native2unicode(hex2dec({'5c' '42'}), 'unicode')  native2unicode(hex2dec({'4e' '2d'}), 'unicode')  native2unicode(hex2dec({'4e' '8c'}), 'unicode')  native2unicode(hex2dec({'6c' '27'}), 'unicode')  native2unicode(hex2dec({'53' '16'}), 'unicode')  native2unicode(hex2dec({'78' 'b3'}), 'unicode')  native2unicode(hex2dec({'76' '84'}), 'unicode')  native2unicode(hex2dec({'57' '30'}), 'unicode')  native2unicode(hex2dec({'4e' '0b'}), 'unicode')  native2unicode(hex2dec({'50' 'a8'}), 'unicode')  native2unicode(hex2dec({'5b' '58'}), 'unicode')  native2unicode(hex2dec({'30' '02'}), 'unicode')  native2unicode(hex2dec({'57' '28'}), 'unicode')  native2unicode(hex2dec({'95' '7f'}), 'unicode')  native2unicode(hex2dec({'8f' 'be'}), 'unicode') ' 25' native2unicode(hex2dec({'00' 'a0'}), 'unicode')  native2unicode(hex2dec({'5e' '74'}), 'unicode')  native2unicode(hex2dec({'76' '84'}), 'unicode')  native2unicode(hex2dec({'65' 'f6'}), 'unicode')  native2unicode(hex2dec({'95' 'f4'}), 'unicode')  native2unicode(hex2dec({'51' '85'}), 'unicode')  native2unicode(hex2dec({'ff' '0c'}), 'unicode')  native2unicode(hex2dec({'4f' '7f'}), 'unicode')  native2unicode(hex2dec({'75' '28'}), 'unicode')  native2unicode(hex2dec({'6c' 'e8'}), 'unicode')  native2unicode(hex2dec({'51' '65'}), 'unicode')  native2unicode(hex2dec({'4e' '95'}), 'unicode')  native2unicode(hex2dec({'4e' 'e5'}), 'unicode') ' 15' native2unicode(hex2dec({'00' 'a0'}), 'unicode') 'kg/s ' native2unicode(hex2dec({'76' '84'}), 'unicode')  native2unicode(hex2dec({'90' '1f'}), 'unicode')  native2unicode(hex2dec({'73' '87'}), 'unicode')  native2unicode(hex2dec({'6c' 'e8'}), 'unicode')  native2unicode(hex2dec({'51' '65'}), 'unicode')  native2unicode(hex2dec({'4e' '8c'}), 'unicode')  native2unicode(hex2dec({'6c' '27'}), 'unicode')  native2unicode(hex2dec({'53' '16'}), 'unicode')  native2unicode(hex2dec({'78' 'b3'}), 'unicode')  native2unicode(hex2dec({'ff' '0c'}), 'unicode')  native2unicode(hex2dec({'71' '36'}), 'unicode')  native2unicode(hex2dec({'54' '0e'}), 'unicode')  native2unicode(hex2dec({'5c' '06'}), 'unicode')  native2unicode(hex2dec({'4e' '95'}), 'unicode')  native2unicode(hex2dec({'51' '73'}), 'unicode')  native2unicode(hex2dec({'95' 'ed'}), 'unicode')  native2unicode(hex2dec({'30' '02'}), 'unicode')  native2unicode(hex2dec({'8b' 'e5'}), 'unicode')  native2unicode(hex2dec({'6a' '21'}), 'unicode')  native2unicode(hex2dec({'57' '8b'}), 'unicode')  native2unicode(hex2dec({'75' '28'}), 'unicode')  native2unicode(hex2dec({'4e' '8e'}), 'unicode')  native2unicode(hex2dec({'8b' 'a1'}), 'unicode')  native2unicode(hex2dec({'7b' '97'}), 'unicode')  native2unicode(hex2dec({'6c' 'e8'}), 'unicode')  native2unicode(hex2dec({'51' '65'}), 'unicode')  native2unicode(hex2dec({'96' '36'}), 'unicode')  native2unicode(hex2dec({'6b' 'b5'}), 'unicode')  native2unicode(hex2dec({'4e' 'e5'}), 'unicode')  native2unicode(hex2dec({'53' 'ca'}), 'unicode')  native2unicode(hex2dec({'6c' 'e8'}), 'unicode')  native2unicode(hex2dec({'51' '65'}), 'unicode')  native2unicode(hex2dec({'4e' '95'}), 'unicode')  native2unicode(hex2dec({'51' '73'}), 'unicode')  native2unicode(hex2dec({'95' 'ed'}), 'unicode')  native2unicode(hex2dec({'54' '0e'}), 'unicode') ' 25' native2unicode(hex2dec({'00' 'a0'}), 'unicode')  native2unicode(hex2dec({'5e' '74'}), 'unicode')  native2unicode(hex2dec({'95' 'f4'}), 'unicode')  native2unicode(hex2dec({'ff' '0c'}), 'unicode')  native2unicode(hex2dec({'4e' '8c'}), 'unicode')  native2unicode(hex2dec({'6c' '27'}), 'unicode')  native2unicode(hex2dec({'53' '16'}), 'unicode')  native2unicode(hex2dec({'78' 'b3'}), 'unicode')  native2unicode(hex2dec({'57' '28'}), 'unicode')  native2unicode(hex2dec({'4e' 'ff'}), 'unicode')  native2unicode(hex2dec({'77' '1f'}), 'unicode')  native2unicode(hex2dec({'57' 'df'}), 'unicode')  native2unicode(hex2dec({'4e' '2d'}), 'unicode')  native2unicode(hex2dec({'76' '84'}), 'unicode')  native2unicode(hex2dec({'62' '69'}), 'unicode')  native2unicode(hex2dec({'65' '63'}), 'unicode')  native2unicode(hex2dec({'60' 'c5'}), 'unicode')  native2unicode(hex2dec({'51' 'b5'}), 'unicode')  native2unicode(hex2dec({'30' '02'}), 'unicode')  native2unicode(hex2dec({'6a' '21'}), 'unicode')  native2unicode(hex2dec({'57' '8b'}), 'unicode')  native2unicode(hex2dec({'4e' '2d'}), 'unicode')  native2unicode(hex2dec({'53' '05'}), 'unicode')  native2unicode(hex2dec({'54' '2b'}), 'unicode')  native2unicode(hex2dec({'67' '65'}), 'unicode')  native2unicode(hex2dec({'81' 'ea'}), 'unicode')  native2unicode(hex2dec({'57' '28'}), 'unicode')  native2unicode(hex2dec({'20' '1c'}), 'unicode')  native2unicode(hex2dec({'5f' '00'}), 'unicode')  native2unicode(hex2dec({'65' '3e'}), 'unicode')  native2unicode(hex2dec({'65' '70'}), 'unicode')  native2unicode(hex2dec({'63' '6e'}), 'unicode')  native2unicode(hex2dec({'5e' '93'}), 'unicode')  native2unicode(hex2dec({'8b' 'b8'}), 'unicode')  native2unicode(hex2dec({'53' 'ef'}), 'unicode')  native2unicode(hex2dec({'8b' 'c1'}), 'unicode')  native2unicode(hex2dec({'20' '1d'}), 'unicode') '(ODbL) ' native2unicode(hex2dec({'4e' '0b'}), 'unicode')  native2unicode(hex2dec({'63' 'd0'}), 'unicode')  native2unicode(hex2dec({'4f' '9b'}), 'unicode')  native2unicode(hex2dec({'76' '84'}), 'unicode') ' Johansen ' native2unicode(hex2dec({'65' '70'}), 'unicode')  native2unicode(hex2dec({'63' '6e'}), 'unicode')  native2unicode(hex2dec({'96' 'c6'}), 'unicode')  native2unicode(hex2dec({'76' '84'}), 'unicode')  native2unicode(hex2dec({'4f' 'e1'}), 'unicode')  native2unicode(hex2dec({'60' '6f'}), 'unicode')  native2unicode(hex2dec({'30' '02'}), 'unicode')  native2unicode(hex2dec({'8b' 'e5'}), 'unicode')  native2unicode(hex2dec({'65' '70'}), 'unicode')  native2unicode(hex2dec({'63' '6e'}), 'unicode')  native2unicode(hex2dec({'5e' '93'}), 'unicode')  native2unicode(hex2dec({'4e' '2d'}), 'unicode')  native2unicode(hex2dec({'4e' '2a'}), 'unicode')  native2unicode(hex2dec({'52' '2b'}), 'unicode')  native2unicode(hex2dec({'51' '85'}), 'unicode')  native2unicode(hex2dec({'5b' 'b9'}), 'unicode')  native2unicode(hex2dec({'76' '84'}), 'unicode')  native2unicode(hex2dec({'4e' 'fb'}), 'unicode')  native2unicode(hex2dec({'4f' '55'}), 'unicode')  native2unicode(hex2dec({'67' '43'}), 'unicode')  native2unicode(hex2dec({'52' '29'}), 'unicode')  native2unicode(hex2dec({'57' '47'}), 'unicode')  native2unicode(hex2dec({'68' '39'}), 'unicode')  native2unicode(hex2dec({'63' '6e'}), 'unicode') ' Database Contents License: http://opendatacommons.org/licenses/dbcl/1.0/ ' native2unicode(hex2dec({'83' 'b7'}), 'unicode')  native2unicode(hex2dec({'5f' '97'}), 'unicode')  native2unicode(hex2dec({'8b' 'b8'}), 'unicode')  native2unicode(hex2dec({'53' 'ef'}), 'unicode')  native2unicode(hex2dec({'ff' '0c'}), 'unicode')  native2unicode(hex2dec({'65' '70'}), 'unicode')  native2unicode(hex2dec({'63' '6e'}), 'unicode')  native2unicode(hex2dec({'75' '31'}), 'unicode')  native2unicode(hex2dec({'63' '2a'}), 'unicode')  native2unicode(hex2dec({'5a' '01'}), 'unicode')  native2unicode(hex2dec({'77' 'f3'}), 'unicode')  native2unicode(hex2dec({'6c' 'b9'}), 'unicode')  native2unicode(hex2dec({'74' '06'}), 'unicode')  native2unicode(hex2dec({'4e' '8b'}), 'unicode')  native2unicode(hex2dec({'4f' '1a'}), 'unicode') ' (NPD)' native2unicode(hex2dec({'30' '01'}), 'unicode')  native2unicode(hex2dec({'53' '51'}), 'unicode')  native2unicode(hex2dec({'5c' '14'}), 'unicode')  native2unicode(hex2dec({'68' '39'}), 'unicode')  native2unicode(hex2dec({'59' '27'}), 'unicode')  native2unicode(hex2dec({'5b' '66'}), 'unicode') ' (UiB) ' native2unicode(hex2dec({'54' '8c'}), 'unicode') ' SINTEF ' native2unicode(hex2dec({'63' 'd0'}), 'unicode')  native2unicode(hex2dec({'4f' '9b'}), 'unicode')  native2unicode(hex2dec({'30' '02'}), 'unicode') ]);

model.param.set('x_well', x_well, 'x-coordinate well');
model.param.set('y_well', y_well, 'y-coordinate well');
model.param.set('r_injection', '15[kg/s]', 'Injection rate');
model.param.set('rho0', '1040[kg/m^3]', 'Brine reference density');
model.param.set('alpha', '6e-4[1/K]', 'Brine thermal expansion coefficient');
model.param.set('beta', '4e-10[1/Pa]', 'Brine compressibility');
model.param.set('T0', '360[K]', 'Brine reference temperature');
model.param.set('p0', '1e5[Pa]', 'Brine reference pressure');
model.param.set('s0_b', '0.2', 'Residual brine saturation');
model.param.set('s0_co2', '0', 'Residual CO2 saturation');
model.param.set('pc_e', '1e4[Pa]', 'Entry pressure');
model.param.set('lambda', '2', 'Brooks-Corey parameter');
model.param.set('rho_solid', '2750[kg/m^3]');
model.param.set('cps_solid', '1600');
model.param.set('alpha_solid', '3.15');

model.component.create('comp1', true);

model.component('comp1').geom.create('geom1', 3);

model.result.table.create('evl2', 'Table');

model.component('comp1').func.create('int1', 'Interpolation');
model.component('comp1').func.create('int2', 'Interpolation');
model.component('comp1').func.create('an1', 'Analytic');
model.component('comp1').func.create('rect1', 'Rectangle');
model.component('comp1').func('int1').set('source', 'file');
model.component('comp1').func('int1').set('importedname', 'property.csv');
model.component('comp1').func('int1').set('importeddim', '3D');
model.component('comp1').func('int1').set('funcs', {'porosity' '1'});
model.component('comp1').func('int1').set('defvars', true);
model.component('comp1').func('int1').set('frame', 'mesh');
model.component('comp1').func('int1').set('reinterp', true);
model.component('comp1').func('int1').set('fununit', {'1'});
model.component('comp1').func('int1').set('argunit', {'m' 'm' 'm'});
model.component('comp1').func('int1').set('filename', pro_path);
model.component('comp1').func('int1').importData;
model.component('comp1').func('int1').set('nargs', '3');
model.component('comp1').func('int1').set('struct', 'spreadsheet');
model.component('comp1').func('int2').set('source', 'file');
model.component('comp1').func('int2').set('importedname', 'property.csv');
model.component('comp1').func('int2').set('importeddim', '3D');
model.component('comp1').func('int2').set('funcs', {'permeability' '2'});
model.component('comp1').func('int2').set('defvars', true);
model.component('comp1').func('int2').set('frame', 'mesh');
model.component('comp1').func('int2').set('reinterp', true);
model.component('comp1').func('int2').set('fununit', {'mD'});
model.component('comp1').func('int2').set('argunit', {'m' 'm' 'm'});
model.component('comp1').func('int2').set('filename', pro_path);
model.component('comp1').func('int2').importData;
model.component('comp1').func('int2').set('nargs', '3');
model.component('comp1').func('int2').set('struct', 'spreadsheet');
model.component('comp1').func('an1').set('funcname', 'density_brine');
model.component('comp1').func('an1').set('expr', 'rho0-rho0*alpha*(T-T0)+rho0*beta*(p-p0)');
model.component('comp1').func('an1').set('args', {'T' 'p'});
model.component('comp1').func('an1').set('fununit', 'kg/m^3');
model.component('comp1').func('an1').set('argunit', {'K' 'Pa'});
model.component('comp1').func('an1').set('plotaxis', {'on' 'on'});
model.component('comp1').func('an1').set('plotfixedvalue', {'0' '0'});
model.component('comp1').func('an1').set('plotargs', {'T' '0' '1'; 'p' '0' '1'});
model.component('comp1').func('rect1').set('lower', 0.05);
model.component('comp1').func('rect1').set('upper', 25);

model.thermodynamics.create('pp1', 'BuiltinPropertyPackage');
model.thermodynamics.feature('pp1').create('mat_singlephase1', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').create('mat_singlephase2', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').create('mat_singlephase3', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').create('mat_singlephase4', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').create('mat_singlephase5', 'OnePhaseProperty');

model.component('comp1').mesh.create('mesh1');

model.component('comp1').geom('geom1').geomRep('comsol');
model.component('comp1').geom('geom1').create('blk2', 'Block');
model.component('comp1').geom('geom1').feature('blk2').set('pos', [1800 1000 -2980]);
model.component('comp1').geom('geom1').feature('blk2').set('size', [6400 6400 160]);
model.component('comp1').geom('geom1').create('sel2', 'ExplicitSelection');
model.component('comp1').geom('geom1').feature('sel2').label([native2unicode(hex2dec({'62' '6b'}), 'unicode')  native2unicode(hex2dec({'63' 'a0'}), 'unicode') ]);
model.component('comp1').geom('geom1').feature('sel2').selection('selection').set('blk2(1)', 1);
model.component('comp1').geom('geom1').create('sel5', 'ExplicitSelection');
model.component('comp1').geom('geom1').feature('sel5').label([native2unicode(hex2dec({'4f' '53'}), 'unicode')  native2unicode(hex2dec({'79' 'ef'}), 'unicode')  native2unicode(hex2dec({'52' '06'}), 'unicode')  native2unicode(hex2dec({'65' '70'}), 'unicode') ]);
model.component('comp1').geom('geom1').feature('sel5').selection('selection').init(2);
model.component('comp1').geom('geom1').feature('sel5').selection('selection').set('blk2(1)', [2 3 5 6]);
model.component('comp1').geom('geom1').create('ls1', 'LineSegment');
model.component('comp1').geom('geom1').feature('ls1').set('specify1', 'coord');
model.component('comp1').geom('geom1').feature('ls1').set('coord1', {'x_well' 'y_well' '-3500'});
model.component('comp1').geom('geom1').feature('ls1').set('specify2', 'coord');
model.component('comp1').geom('geom1').feature('ls1').set('coord2', {'x_well' 'y_well' '-2500'});
model.component('comp1').geom('geom1').create('blk1', 'Block');
model.component('comp1').geom('geom1').feature('blk1').set('pos', {'x_well-50' 'y_well-50' '-3500'});
model.component('comp1').geom('geom1').feature('blk1').set('size', [100 100 1000]);
model.component('comp1').geom('geom1').create('par1', 'Partition');
model.component('comp1').geom('geom1').feature('par1').set('keeptool', true);
model.component('comp1').geom('geom1').feature('par1').selection('input').set({'blk1' 'ls1'});
model.component('comp1').geom('geom1').feature('par1').selection('tool').set({'blk2'});
model.component('comp1').geom('geom1').create('del1', 'Delete');
model.component('comp1').geom('geom1').feature('del1').set('selresult', true);
model.component('comp1').geom('geom1').feature('del1').selection('input').init(3);
model.component('comp1').geom('geom1').feature('del1').selection('input').set('par1(1)', [1 3]);
model.component('comp1').geom('geom1').create('del2', 'Delete');
model.component('comp1').geom('geom1').feature('del2').selection('input').init(1);
model.component('comp1').geom('geom1').feature('del2').selection('input').set('par1(2)', [1 3]);
model.component('comp1').geom('geom1').create('pare1', 'PartitionEdges');
model.component('comp1').geom('geom1').feature('pare1').set('param', [0.25 0.75]);
model.component('comp1').geom('geom1').feature('pare1').selection('edge').set('del2(1)', 1);
model.component('comp1').geom('geom1').create('del3', 'Delete');
model.component('comp1').geom('geom1').feature('del3').selection('input').init(1);
model.component('comp1').geom('geom1').feature('del3').selection('input').set('pare1(1)', [1 3]);
model.component('comp1').geom('geom1').create('sel6', 'ExplicitSelection');
model.component('comp1').geom('geom1').feature('sel6').label([native2unicode(hex2dec({'81' 'ea'}), 'unicode')  native2unicode(hex2dec({'75' '31'}), 'unicode')  native2unicode(hex2dec({'4e' '09'}), 'unicode')  native2unicode(hex2dec({'89' 'd2'}), 'unicode')  native2unicode(hex2dec({'7f' '51'}), 'unicode')  native2unicode(hex2dec({'68' '3c'}), 'unicode') '1']);
model.component('comp1').geom('geom1').feature('sel6').selection('selection').init(2);
model.component('comp1').geom('geom1').feature('sel6').selection('selection').set('blk2(1)', 4);
model.component('comp1').geom('geom1').create('sel3', 'ExplicitSelection');
model.component('comp1').geom('geom1').feature('sel3').label([native2unicode(hex2dec({'4e' '95'}), 'unicode') ]);
model.component('comp1').geom('geom1').feature('sel3').selection('selection').init(1);
model.component('comp1').geom('geom1').feature('sel3').selection('selection').set('del3(1)', 1);
model.component('comp1').geom('geom1').create('sel4', 'ExplicitSelection');
model.component('comp1').geom('geom1').feature('sel4').label([native2unicode(hex2dec({'65' 'e0'}), 'unicode')  native2unicode(hex2dec({'90' '1a'}), 'unicode')  native2unicode(hex2dec({'91' 'cf'}), 'unicode') ]);
model.component('comp1').geom('geom1').feature('sel4').selection('selection').init(2);
model.component('comp1').geom('geom1').feature('sel4').selection('selection').set('blk2(1)', [1 4]);
model.component('comp1').geom('geom1').feature('sel4').selection('selection').set('del1(1)', [3 4]);
model.component('comp1').geom('geom1').create('sel7', 'ExplicitSelection');
model.component('comp1').geom('geom1').feature('sel7').label('well');
model.component('comp1').geom('geom1').feature('sel7').selection('selection').init(2);
model.component('comp1').geom('geom1').feature('sel7').selection('selection').set('del1(1)', [3 4]);
model.component('comp1').geom('geom1').run('fin');
model.component('comp1').geom('geom1').create('difsel1', 'DifferenceSelection');
model.component('comp1').geom('geom1').feature('difsel1').set('entitydim', 2);
model.component('comp1').geom('geom1').feature('difsel1').set('add', {'sel6'});
model.component('comp1').geom('geom1').feature('difsel1').set('subtract', {'sel7'});
model.component('comp1').geom('geom1').create('difsel2', 'DifferenceSelection');
model.component('comp1').geom('geom1').feature('difsel2').set('add', {'sel2'});
model.component('comp1').geom('geom1').feature('difsel2').set('subtract', {'del1'});
model.component('comp1').geom('geom1').run;

model.component('comp1').selection.create('sel1', 'Explicit');
model.component('comp1').selection('sel1').geom('geom1', 2);

model.component('comp1').variable.create('var1');
model.component('comp1').variable('var1').set('Temp', '(-3000[m]-z)*0.03[K/m]+100[degC]', 'Geothermal temperature distribution');

model.view.create('view2', 2);
model.view.create('view3', 2);

model.component('comp1').material.create('mat2', 'Common');
model.component('comp1').material.create('mat1', 'Common');
model.component('comp1').material('mat2').propertyGroup('def').func.create('eta', 'Piecewise');
model.component('comp1').material('mat2').propertyGroup('def').func.create('Cp', 'Piecewise');
model.component('comp1').material('mat2').propertyGroup('def').func.create('rho', 'Analytic');
model.component('comp1').material('mat2').propertyGroup('def').func.create('k', 'Piecewise');
model.component('comp1').material('mat2').propertyGroup.create('idealGas', 'Ideal gas');
model.component('comp1').material('mat2').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.component('comp1').material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.component('comp1').material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.component('comp1').material('mat1').propertyGroup('def').func.create('rho', 'Piecewise');
model.component('comp1').material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.component('comp1').material('mat1').propertyGroup('def').func.create('cs', 'Interpolation');
model.component('comp1').material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.component('comp1').material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.component('comp1').material('mat1').propertyGroup('def').func.create('an3', 'Analytic');

model.component('comp1').physics.create('phtr', 'PhaseTransportPorousMedia', 'geom1');
model.component('comp1').physics('phtr').create('sa1', 'VolumeFraction', 2);
model.component('comp1').physics('phtr').feature('sa1').selection.named('geom1_sel5');
model.component('comp1').physics.create('dl', 'PorousMediaFlowDarcy', 'geom1');
model.component('comp1').physics('dl').create('hh1', 'HydraulicHead', 2);
model.component('comp1').physics('dl').feature('hh1').selection.named('geom1_sel5');
model.component('comp1').physics.create('ht', 'PorousMediaHeatTransfer', 'geom1');
model.component('comp1').physics('ht').create('lihs1', 'LineHeatSource', 1);
model.component('comp1').physics('ht').feature('lihs1').selection.named('geom1_sel3');
model.component('comp1').physics('ht').create('open1', 'OpenBoundary', 2);
model.component('comp1').physics('ht').feature('open1').selection.named('geom1_sel5');

model.component('comp1').multiphysics.create('mfpm1', 'MultiphaseFlowInPorousMedia', 3);
model.component('comp1').multiphysics('mfpm1').selection.all;
model.component('comp1').multiphysics.create('wellmpe1', 'Welle', 1);
model.component('comp1').multiphysics('wellmpe1').selection.named('geom1_sel3');

model.component('comp1').mesh('mesh1').autoMeshSize(3);

model.result.table('evl2').label('Evaluation 2D');
model.result.table('evl2').comments([native2unicode(hex2dec({'4e' 'a4'}), 'unicode')  native2unicode(hex2dec({'4e' '92'}), 'unicode')  native2unicode(hex2dec({'76' '84'}), 'unicode')  native2unicode(hex2dec({'4e' '8c'}), 'unicode')  native2unicode(hex2dec({'7e' 'f4'}), 'unicode')  native2unicode(hex2dec({'50' '3c'}), 'unicode') ]);

model.thermodynamics.feature('pp1').label([native2unicode(hex2dec({'6c' '14'}), 'unicode')  native2unicode(hex2dec({'4f' '53'}), 'unicode')  native2unicode(hex2dec({'7c' 'fb'}), 'unicode')  native2unicode(hex2dec({'7e' 'df'}), 'unicode') ' 1']);
model.thermodynamics.feature('pp1').set('manager_id', 'COMSOL');
model.thermodynamics.feature('pp1').set('manager_version', '1.0');
model.thermodynamics.feature('pp1').set('packagename', 'pp1');
model.thermodynamics.feature('pp1').set('package_desc', [native2unicode(hex2dec({'51' '85'}), 'unicode')  native2unicode(hex2dec({'7f' '6e'}), 'unicode')  native2unicode(hex2dec({'5c' '5e'}), 'unicode')  native2unicode(hex2dec({'60' '27'}), 'unicode')  native2unicode(hex2dec({'53' '05'}), 'unicode') ]);
model.thermodynamics.feature('pp1').set('managerindex', '0');
model.thermodynamics.feature('pp1').set('packageid', 'COMSOL1');
model.thermodynamics.feature('pp1').set('compoundlist', {'carbon dioxide' '124-38-9' 'CO2' 'COMSOL'});
model.thermodynamics.feature('pp1').set('phase_list', {'Gas' 'Vapor'});
model.thermodynamics.feature('pp1').set('LiquidCard', 'None');
model.thermodynamics.feature('pp1').set('GasPhaseModel', 'PengRobinson');
model.thermodynamics.feature('pp1').set('ThermodynamicModel', 'PengRobinson');
model.thermodynamics.feature('pp1').setEntry('property', 'VapDiffusivity', 'Automatic');
model.thermodynamics.feature('pp1').setEntry('property', 'VapThermalConductivity', 'KineticTheory');
model.thermodynamics.feature('pp1').setEntry('property', 'VapViscosity', 'DavidsonHighPressure');
model.thermodynamics.feature('pp1').create('mat_singlephase1', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').create('mat_singlephase2', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').create('mat_singlephase3', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').create('mat_singlephase4', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').create('mat_singlephase5', 'OnePhaseProperty');
model.thermodynamics.feature('pp1').feature('mat_singlephase1').label([native2unicode(hex2dec({'5b' 'c6'}), 'unicode')  native2unicode(hex2dec({'5e' 'a6'}), 'unicode') ' 1']);
model.thermodynamics.feature('pp1').feature('mat_singlephase1').set('funcname', 'Densitypp1');
model.thermodynamics.feature('pp1').feature('mat_singlephase1').set('property', 'Density');
model.thermodynamics.feature('pp1').feature('mat_singlephase1').set('propertydescr', [native2unicode(hex2dec({'5b' 'c6'}), 'unicode')  native2unicode(hex2dec({'5e' 'a6'}), 'unicode') ]);
model.thermodynamics.feature('pp1').feature('mat_singlephase1').set('unit', 'kg/m^3');
model.thermodynamics.feature('pp1').feature('mat_singlephase1').set('prop_basis', 'mass');
model.thermodynamics.feature('pp1').feature('mat_singlephase1').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('mat_singlephase1').set('compounds', {'carbon dioxide'});
model.thermodynamics.feature('pp1').feature('mat_singlephase1').set('args', {'temperature' 'K' [native2unicode(hex2dec({'6e' '29'}), 'unicode')  native2unicode(hex2dec({'5e' 'a6'}), 'unicode') ]; 'pressure' 'Pa' [native2unicode(hex2dec({'53' '8b'}), 'unicode')  native2unicode(hex2dec({'52' '9b'}), 'unicode') ]});
model.thermodynamics.feature('pp1').feature('mat_singlephase1').set('derivatives', {'Densitypp1_Dtemperature' 'Densitypp1_Dpressure'});
model.thermodynamics.feature('pp1').feature('mat_singlephase1').set('SecondDerivatives', {'Densitypp1_Dtemperature_Dtemperature' 'Densitypp1_Dpressure_Dpressure' 'Densitypp1_Dtemperature_Dpressure'});
model.thermodynamics.feature('pp1').feature('mat_singlephase1').set('SecondDerivativeIndices', {'0' '0' '0' '1' '1' '1' '0' '1' '2' '1'  ...
'0' '2'});
model.thermodynamics.feature('pp1').feature('mat_singlephase1').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('mat_singlephase2').label([native2unicode(hex2dec({'70' 'ed'}), 'unicode')  native2unicode(hex2dec({'5b' 'b9'}), 'unicode') ' (Cp) 1']);
model.thermodynamics.feature('pp1').feature('mat_singlephase2').set('funcname', 'HeatCapacityCppp1');
model.thermodynamics.feature('pp1').feature('mat_singlephase2').set('property', 'HeatCapacityCp');
model.thermodynamics.feature('pp1').feature('mat_singlephase2').set('propertydescr', [native2unicode(hex2dec({'70' 'ed'}), 'unicode')  native2unicode(hex2dec({'5b' 'b9'}), 'unicode') ' (Cp)']);
model.thermodynamics.feature('pp1').feature('mat_singlephase2').set('unit', 'J/kg/K');
model.thermodynamics.feature('pp1').feature('mat_singlephase2').set('prop_basis', 'mass');
model.thermodynamics.feature('pp1').feature('mat_singlephase2').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('mat_singlephase2').set('compounds', {'carbon dioxide'});
model.thermodynamics.feature('pp1').feature('mat_singlephase2').set('args', {'temperature' 'K' [native2unicode(hex2dec({'6e' '29'}), 'unicode')  native2unicode(hex2dec({'5e' 'a6'}), 'unicode') ]; 'pressure' 'Pa' [native2unicode(hex2dec({'53' '8b'}), 'unicode')  native2unicode(hex2dec({'52' '9b'}), 'unicode') ]});
model.thermodynamics.feature('pp1').feature('mat_singlephase2').set('derivatives', {'HeatCapacityCppp1_Dtemperature' 'HeatCapacityCppp1_Dpressure'});
model.thermodynamics.feature('pp1').feature('mat_singlephase2').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('mat_singlephase3').label([native2unicode(hex2dec({'70' 'ed'}), 'unicode')  native2unicode(hex2dec({'5b' 'b9'}), 'unicode')  native2unicode(hex2dec({'6b' 'd4'}), 'unicode') ' (Cp/Cv) 1']);
model.thermodynamics.feature('pp1').feature('mat_singlephase3').set('funcname', 'HeatCapacityRatioCpCvpp1');
model.thermodynamics.feature('pp1').feature('mat_singlephase3').set('property', 'HeatCapacityRatioCpCv');
model.thermodynamics.feature('pp1').feature('mat_singlephase3').set('propertydescr', [native2unicode(hex2dec({'70' 'ed'}), 'unicode')  native2unicode(hex2dec({'5b' 'b9'}), 'unicode')  native2unicode(hex2dec({'6b' 'd4'}), 'unicode') ' (Cp/Cv)']);
model.thermodynamics.feature('pp1').feature('mat_singlephase3').set('unit', '1');
model.thermodynamics.feature('pp1').feature('mat_singlephase3').set('prop_basis', 'mass');
model.thermodynamics.feature('pp1').feature('mat_singlephase3').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('mat_singlephase3').set('compounds', {'carbon dioxide'});
model.thermodynamics.feature('pp1').feature('mat_singlephase3').set('args', {'temperature' 'K' [native2unicode(hex2dec({'6e' '29'}), 'unicode')  native2unicode(hex2dec({'5e' 'a6'}), 'unicode') ]; 'pressure' 'Pa' [native2unicode(hex2dec({'53' '8b'}), 'unicode')  native2unicode(hex2dec({'52' '9b'}), 'unicode') ]});
model.thermodynamics.feature('pp1').feature('mat_singlephase3').set('derivatives', {'HeatCapacityRatioCpCvpp1_Dtemperature' 'HeatCapacityRatioCpCvpp1_Dpressure'});
model.thermodynamics.feature('pp1').feature('mat_singlephase3').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('mat_singlephase4').label([native2unicode(hex2dec({'5b' 'fc'}), 'unicode')  native2unicode(hex2dec({'70' 'ed'}), 'unicode')  native2unicode(hex2dec({'7c' 'fb'}), 'unicode')  native2unicode(hex2dec({'65' '70'}), 'unicode') ' 1']);
model.thermodynamics.feature('pp1').feature('mat_singlephase4').set('funcname', 'ThermalConductivitypp1');
model.thermodynamics.feature('pp1').feature('mat_singlephase4').set('property', 'ThermalConductivity');
model.thermodynamics.feature('pp1').feature('mat_singlephase4').set('propertydescr', [native2unicode(hex2dec({'5b' 'fc'}), 'unicode')  native2unicode(hex2dec({'70' 'ed'}), 'unicode')  native2unicode(hex2dec({'7c' 'fb'}), 'unicode')  native2unicode(hex2dec({'65' '70'}), 'unicode') ]);
model.thermodynamics.feature('pp1').feature('mat_singlephase4').set('unit', 'W/m/K');
model.thermodynamics.feature('pp1').feature('mat_singlephase4').set('prop_basis', 'mass');
model.thermodynamics.feature('pp1').feature('mat_singlephase4').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('mat_singlephase4').set('compounds', {'carbon dioxide'});
model.thermodynamics.feature('pp1').feature('mat_singlephase4').set('args', {'temperature' 'K' [native2unicode(hex2dec({'6e' '29'}), 'unicode')  native2unicode(hex2dec({'5e' 'a6'}), 'unicode') ]; 'pressure' 'Pa' [native2unicode(hex2dec({'53' '8b'}), 'unicode')  native2unicode(hex2dec({'52' '9b'}), 'unicode') ]});
model.thermodynamics.feature('pp1').feature('mat_singlephase4').set('derivatives', {'ThermalConductivitypp1_Dtemperature' 'ThermalConductivitypp1_Dpressure'});
model.thermodynamics.feature('pp1').feature('mat_singlephase4').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});
model.thermodynamics.feature('pp1').feature('mat_singlephase5').label([native2unicode(hex2dec({'9e' 'cf'}), 'unicode')  native2unicode(hex2dec({'5e' 'a6'}), 'unicode') ' 1']);
model.thermodynamics.feature('pp1').feature('mat_singlephase5').set('funcname', 'Viscositypp1');
model.thermodynamics.feature('pp1').feature('mat_singlephase5').set('property', 'Viscosity');
model.thermodynamics.feature('pp1').feature('mat_singlephase5').set('propertydescr', [native2unicode(hex2dec({'9e' 'cf'}), 'unicode')  native2unicode(hex2dec({'5e' 'a6'}), 'unicode') ]);
model.thermodynamics.feature('pp1').feature('mat_singlephase5').set('unit', 'Pa*s');
model.thermodynamics.feature('pp1').feature('mat_singlephase5').set('prop_basis', 'mass');
model.thermodynamics.feature('pp1').feature('mat_singlephase5').set('phase', 'Gas');
model.thermodynamics.feature('pp1').feature('mat_singlephase5').set('compounds', {'carbon dioxide'});
model.thermodynamics.feature('pp1').feature('mat_singlephase5').set('args', {'temperature' 'K' [native2unicode(hex2dec({'6e' '29'}), 'unicode')  native2unicode(hex2dec({'5e' 'a6'}), 'unicode') ]; 'pressure' 'Pa' [native2unicode(hex2dec({'53' '8b'}), 'unicode')  native2unicode(hex2dec({'52' '9b'}), 'unicode') ]});
model.thermodynamics.feature('pp1').feature('mat_singlephase5').set('derivatives', {'Viscositypp1_Dtemperature' 'Viscositypp1_Dpressure'});
model.thermodynamics.feature('pp1').feature('mat_singlephase5').set('plotargs', {'temperature' '298.15' '373.15'; 'pressure' '101325' '101325'});

model.component('comp1').view('view1').set('locked', true);
model.component('comp1').view('view1').set('ssao', true);
model.component('comp1').view('view1').set('transparency', true);
model.view('view2').axis.set('xmin', -4285.37744140625);
model.view('view2').axis.set('xmax', 26185.47265625);
model.view('view2').axis.set('ymin', -3832.296875);
model.view('view2').axis.set('ymax', 21239.6015625);
model.view('view3').set('showgrid', false);
model.view('view3').axis.set('xmin', -8077.41015625);
model.view('view3').axis.set('xmax', 27262.63671875);
model.view('view3').axis.set('ymin', -4904.9384765625);
model.view('view3').axis.set('ymax', 25888.7109375);

model.component('comp1').material('mat2').label('Carbon dioxide');
model.component('comp1').material('mat2').set('family', 'air');
model.component('comp1').material('mat2').propertyGroup('def').label('Basic');
model.component('comp1').material('mat2').propertyGroup('def').func('eta').label('Piecewise');
model.component('comp1').material('mat2').propertyGroup('def').func('eta').set('arg', 'T');
model.component('comp1').material('mat2').propertyGroup('def').func('eta').set('pieces', {'220.0' '600.0' '-1.48502597E-6+6.46786388E-8*T^1-3.66170537E-11*T^2+1.24501217E-14*T^3'});
model.component('comp1').material('mat2').propertyGroup('def').func('eta').set('argunit', 'K');
model.component('comp1').material('mat2').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.component('comp1').material('mat2').propertyGroup('def').func('Cp').label('Piecewise 2');
model.component('comp1').material('mat2').propertyGroup('def').func('Cp').set('arg', 'T');
model.component('comp1').material('mat2').propertyGroup('def').func('Cp').set('pieces', {'220.0' '600.0' '459.913258+1.86487996*T^1-0.00212921519*T^2+1.22488004E-6*T^3'});
model.component('comp1').material('mat2').propertyGroup('def').func('Cp').set('argunit', 'K');
model.component('comp1').material('mat2').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.component('comp1').material('mat2').propertyGroup('def').func('rho').label('Analytic');
model.component('comp1').material('mat2').propertyGroup('def').func('rho').set('expr', 'pA*0.04401/R_const[K*mol/J]/T');
model.component('comp1').material('mat2').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.component('comp1').material('mat2').propertyGroup('def').func('rho').set('dermethod', 'manual');
model.component('comp1').material('mat2').propertyGroup('def').func('rho').set('argders', {'pA' 'd(pA*0.04401/R_const/T,pA)'; 'T' 'd(pA*0.04401/R_const/T,T)'});
model.component('comp1').material('mat2').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.component('comp1').material('mat2').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.component('comp1').material('mat2').propertyGroup('def').func('rho').set('plotaxis', {'off' 'on'});
model.component('comp1').material('mat2').propertyGroup('def').func('rho').set('plotfixedvalue', {'101325' '273.15'});
model.component('comp1').material('mat2').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.component('comp1').material('mat2').propertyGroup('def').func('k').label('Piecewise 3');
model.component('comp1').material('mat2').propertyGroup('def').func('k').set('arg', 'T');
model.component('comp1').material('mat2').propertyGroup('def').func('k').set('pieces', {'220.0' '600.0' '-0.00132472616+4.13956923E-5*T^1+6.70889081E-8*T^2-2.11083153E-11*T^3'});
model.component('comp1').material('mat2').propertyGroup('def').func('k').set('argunit', 'K');
model.component('comp1').material('mat2').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.component('comp1').material('mat2').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.component('comp1').material('mat2').propertyGroup('def').set('ratioofspecificheat', '1.3');
model.component('comp1').material('mat2').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.component('comp1').material('mat2').propertyGroup('def').set('density', 'rho(pA,T)');
model.component('comp1').material('mat2').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.component('comp1').material('mat2').propertyGroup('def').addInput('temperature');
model.component('comp1').material('mat2').propertyGroup('def').addInput('pressure');
model.component('comp1').material('mat2').propertyGroup('idealGas').label('Ideal gas');
model.component('comp1').material('mat2').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.component('comp1').material('mat2').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.component('comp1').material('mat2').propertyGroup('idealGas').func('Cp').set('pieces', {'220.0' '600.0' '459.913258+1.86487996*T^1-0.00212921519*T^2+1.22488004E-6*T^3'});
model.component('comp1').material('mat2').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.component('comp1').material('mat2').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.component('comp1').material('mat2').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.component('comp1').material('mat2').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.component('comp1').material('mat2').propertyGroup('idealGas').set('ratioofspecificheat', '1.3');
model.component('comp1').material('mat2').propertyGroup('idealGas').set('molarmass', '44.0095e-3');
model.component('comp1').material('mat2').propertyGroup('idealGas').addInput('temperature');
model.component('comp1').material('mat2').propertyGroup('idealGas').addInput('pressure');
model.component('comp1').material('mat1').label('Water, liquid');
model.component('comp1').material('mat1').set('family', 'water');
model.component('comp1').material('mat1').propertyGroup('def').label('Basic');
model.component('comp1').material('mat1').propertyGroup('def').func('eta').label('Piecewise');
model.component('comp1').material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.component('comp1').material('mat1').propertyGroup('def').func('eta').set('pieces', {'273.15' '413.15' '1.3799566804-0.021224019151*T^1+1.3604562827E-4*T^2-4.6454090319E-7*T^3+8.9042735735E-10*T^4-9.0790692686E-13*T^5+3.8457331488E-16*T^6'; '413.15' '553.75' '0.00401235783-2.10746715E-5*T^1+3.85772275E-8*T^2-2.39730284E-11*T^3'});
model.component('comp1').material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.component('comp1').material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.component('comp1').material('mat1').propertyGroup('def').func('Cp').label('Piecewise 2');
model.component('comp1').material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.component('comp1').material('mat1').propertyGroup('def').func('Cp').set('pieces', {'273.15' '553.75' '12010.1471-80.4072879*T^1+0.309866854*T^2-5.38186884E-4*T^3+3.62536437E-7*T^4'});
model.component('comp1').material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.component('comp1').material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.component('comp1').material('mat1').propertyGroup('def').func('rho').label('Piecewise 3');
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('arg', 'T');
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('smooth', 'contd1');
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('pieces', {'273.15' '293.15' '0.000063092789034*T^3-0.060367639882855*T^2+18.9229382407066*T-950.704055329848'; '293.15' '373.15' '0.000010335053319*T^3-0.013395065634452*T^2+4.969288832655160*T+432.257114008512'});
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('argunit', 'K');
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.component('comp1').material('mat1').propertyGroup('def').func('k').label('Piecewise 4');
model.component('comp1').material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.component('comp1').material('mat1').propertyGroup('def').func('k').set('pieces', {'273.15' '553.75' '-0.869083936+0.00894880345*T^1-1.58366345E-5*T^2+7.97543259E-9*T^3'});
model.component('comp1').material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.component('comp1').material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.component('comp1').material('mat1').propertyGroup('def').func('cs').label('Interpolation');
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('table', {'273' '1403';  ...
'278' '1427';  ...
'283' '1447';  ...
'293' '1481';  ...
'303' '1507';  ...
'313' '1526';  ...
'323' '1541';  ...
'333' '1552';  ...
'343' '1555';  ...
'353' '1555';  ...
'363' '1550';  ...
'373' '1543'});
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('interp', 'piecewisecubic');
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('fununit', {'m/s'});
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.component('comp1').material('mat1').propertyGroup('def').func('an1').label('Analytic 1');
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(T)*d(rho(T),T)');
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('args', {'T'});
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('argunit', {'K'});
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('plotfixedvalue', {'273.15'});
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('plotargs', {'T' '273.15' '373.15'});
model.component('comp1').material('mat1').propertyGroup('def').func('an2').label('Analytic 2');
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('funcname', 'gamma_w');
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('expr', '1+(T/Cp(T))*(alpha_p(T)*cs(T))^2');
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('fununit', '1');
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('plotfixedvalue', {'273.15'});
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '273.15' '373.15'});
model.component('comp1').material('mat1').propertyGroup('def').func('an3').label('Analytic 3');
model.component('comp1').material('mat1').propertyGroup('def').func('an3').set('funcname', 'muB');
model.component('comp1').material('mat1').propertyGroup('def').func('an3').set('expr', '2.79*eta(T)');
model.component('comp1').material('mat1').propertyGroup('def').func('an3').set('args', {'T'});
model.component('comp1').material('mat1').propertyGroup('def').func('an3').set('fununit', 'Pa*s');
model.component('comp1').material('mat1').propertyGroup('def').func('an3').set('argunit', {'K'});
model.component('comp1').material('mat1').propertyGroup('def').func('an3').set('plotfixedvalue', {'273.15'});
model.component('comp1').material('mat1').propertyGroup('def').func('an3').set('plotargs', {'T' '273.15' '553.75'});
model.component('comp1').material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.component('comp1').material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.component('comp1').material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(T)' '0' '0' '0' 'alpha_p(T)' '0' '0' '0' 'alpha_p(T)'});
model.component('comp1').material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.component('comp1').material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.component('comp1').material('mat1').propertyGroup('def').set('ratioofspecificheat', 'gamma_w(T)');
model.component('comp1').material('mat1').propertyGroup('def').set('electricconductivity', {'5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]'});
model.component('comp1').material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.component('comp1').material('mat1').propertyGroup('def').set('density', 'rho(T)');
model.component('comp1').material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.component('comp1').material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.component('comp1').material('mat1').propertyGroup('def').addInput('temperature');

model.component('comp1').physics('phtr').prop('GravityEffects').set('IncludeGravity', true);
model.component('comp1').physics('phtr').prop('QuadratureSettings').set('AutomaticQuadrature', false);
model.component('comp1').physics('phtr').prop('QuadratureSettings').set('IntegrationOrder', 4);
model.component('comp1').physics('phtr').feature('pptp1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('phtr').feature('pptp1').set('minput_temperature', 'Temp');
model.component('comp1').physics('phtr').feature('pptp1').set('capillarypressuremodel', 'BrooksCorey');
model.component('comp1').physics('phtr').feature('pptp1').set('pec', 'pc_e');
model.component('comp1').physics('phtr').feature('pptp1').set('lambdap', 'lambda');
model.component('comp1').physics('phtr').feature('pptp1').set('sr_s1', 's0_b');
model.component('comp1').physics('phtr').feature('pptp1').set('phaselist_s1', 'mat1');
model.component('comp1').physics('phtr').feature('pptp1').set('rhoint_s1_mat', 'userdef');
model.component('comp1').physics('phtr').feature('pptp1').set('rhoint_s1', 'density_brine(Temp,dl.pA)');
model.component('comp1').physics('phtr').feature('sa1').set('phases', [0; 1]);
model.component('comp1').physics('dl').prop('ShapeProperty').set('order_pressure', 1);
model.component('comp1').physics('dl').prop('GravityEffects').set('IncludeGravity', true);
model.component('comp1').physics('dl').feature('porous1').set('fluidType', 'compressibleLinearized');
model.component('comp1').physics('dl').feature('porous1').feature('fluid1').set('fluidType', 'compressibleLinearized');
model.component('comp1').physics('dl').feature('porous1').feature('fluid1').set('chif_mat', 'userdef');
model.component('comp1').physics('dl').feature('porous1').feature('fluid1').set('chif', 'beta');
model.component('comp1').physics('dl').feature('porous1').feature('pm1').set('epsilon_mat', 'userdef');
model.component('comp1').physics('dl').feature('porous1').feature('pm1').set('epsilon', 'porosity');
model.component('comp1').physics('dl').feature('porous1').feature('pm1').set('kappa_mat', 'userdef');
model.component('comp1').physics('dl').feature('porous1').feature('pm1').set('kappa', {'permeability'; '0'; '0'; '0'; 'permeability'; '0'; '0'; '0'; 'permeability'});
model.component('comp1').physics('dl').feature('init1').set('InitType', 'H');
model.component('comp1').physics('ht').prop('PhysicalModelProperty').set('hasDG', true);
model.component('comp1').physics('ht').feature('porous1').feature('fluid1').set('u_src', 'root.comp1.phtr.ux_s2');
model.component('comp1').physics('ht').feature('porous1').feature('pm1').set('poro_mat', 'userdef');
model.component('comp1').physics('ht').feature('porous1').feature('pm1').set('poro', 'porosity');
model.component('comp1').physics('ht').feature('porous1').feature('pm1').set('k_b', {'alpha_solid'; '0'; '0'; '0'; 'alpha_solid'; '0'; '0'; '0'; 'alpha_solid'});
model.component('comp1').physics('ht').feature('porous1').feature('pm1').set('rho_b', 'rho_solid');
model.component('comp1').physics('ht').feature('porous1').feature('pm1').set('Cp_b', 'cps_solid');
model.component('comp1').physics('ht').feature('init1').set('Tinit', 'Temp');
model.component('comp1').physics('ht').feature('lihs1').set('Ql', 'mat1.def.Cp(T)*wellmpe1.Ml_s2*(20[degC]-T)');
model.component('comp1').physics('ht').feature('open1').set('Tustr', 'Temp');

model.component('comp1').multiphysics('wellmpe1').set('M0', 'r_injection*rect1(t/1[a])');
model.component('comp1').multiphysics('wellmpe1').set('M0_s2', 'r_injection*rect1(t/1[a])');

model.study.create('std1');
model.study('std1').create('time', 'Transient');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').attach('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature.remove('fcDef');

model.result.dataset.create('cpl1', 'CutPlane');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset('surf1').selection.set([4 9]);
model.result.create('pg7', 'PlotGroup2D');
model.result.create('pg9', 'PlotGroup2D');
model.result.create('pg8', 'PlotGroup2D');
model.result.create('pg10', 'PlotGroup2D');
model.result('pg7').create('surf1', 'Surface');
model.result('pg7').create('surf2', 'Surface');
model.result('pg7').create('surf3', 'Surface');
model.result('pg7').create('surf4', 'Surface');
model.result('pg7').feature('surf1').set('expr', 's2');
model.result('pg7').feature('surf2').set('expr', 's2');
model.result('pg7').feature('surf3').set('expr', 's2');
model.result('pg7').feature('surf4').set('expr', 's2');
model.result('pg9').create('surf1', 'Surface');
model.result('pg9').create('surf2', 'Surface');
model.result('pg9').create('surf3', 'Surface');
model.result('pg9').create('surf4', 'Surface');
model.result('pg9').feature('surf1').set('expr', 'T');
model.result('pg9').feature('surf2').set('expr', 'T');
model.result('pg9').feature('surf3').set('expr', 'T');
model.result('pg9').feature('surf4').set('expr', 'T');
model.result('pg8').create('surf1', 'Surface');
model.result('pg8').create('surf2', 'Surface');
model.result('pg8').create('surf3', 'Surface');
model.result('pg8').create('surf4', 'Surface');
model.result('pg8').feature('surf1').set('expr', 'porosity');
model.result('pg8').feature('surf2').set('expr', 'porosity');
model.result('pg8').feature('surf3').set('expr', 'porosity');
model.result('pg8').feature('surf4').set('expr', 'porosity');
model.result('pg10').create('surf1', 'Surface');
model.result('pg10').create('surf2', 'Surface');
model.result('pg10').create('surf3', 'Surface');
model.result('pg10').create('surf4', 'Surface');
model.result('pg10').feature('surf1').set('expr', 'permeability');
model.result('pg10').feature('surf2').set('expr', 'permeability');
model.result('pg10').feature('surf3').set('expr', 'permeability');
model.result('pg10').feature('surf4').set('expr', 'permeability');
model.result.export.create('data1', 'Data');
model.result.export.create('img1', 'Image');
model.result.export.create('img2', 'Image');

model.study('std1').feature('time').set('tunit', 'a');
model.study('std1').feature('time').set('tlist', 'range(0,2.5,50)');

model.sol('sol1').attach('std1');
model.sol('sol1').feature('st1').label([native2unicode(hex2dec({'7f' '16'}), 'unicode')  native2unicode(hex2dec({'8b' 'd1'}), 'unicode')  native2unicode(hex2dec({'65' 'b9'}), 'unicode')  native2unicode(hex2dec({'7a' '0b'}), 'unicode') ': ' native2unicode(hex2dec({'77' 'ac'}), 'unicode')  native2unicode(hex2dec({'60' '01'}), 'unicode') ]);
model.sol('sol1').feature('v1').label([native2unicode(hex2dec({'56' 'e0'}), 'unicode')  native2unicode(hex2dec({'53' 'd8'}), 'unicode')  native2unicode(hex2dec({'91' 'cf'}), 'unicode') ' 1.1']);
model.sol('sol1').feature('v1').set('scalemethod', 'init');
model.sol('sol1').feature('v1').set('clist', {'range(0,2.5,50)[a]' '0.05[a]'});
model.sol('sol1').feature('v1').feature('comp1_s2').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_s2').set('scaleval', 1);
model.sol('sol1').feature('t1').label([native2unicode(hex2dec({'77' 'ac'}), 'unicode')  native2unicode(hex2dec({'60' '01'}), 'unicode')  native2unicode(hex2dec({'6c' '42'}), 'unicode')  native2unicode(hex2dec({'89' 'e3'}), 'unicode')  native2unicode(hex2dec({'56' '68'}), 'unicode') ' 1.1']);
model.sol('sol1').feature('t1').set('tunit', 'a');
model.sol('sol1').feature('t1').set('tlist', 'range(0,2.5,50)');
model.sol('sol1').feature('t1').set('rtol', 0.005);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('stabcntrl', true);
model.sol('sol1').feature('t1').feature('dDef').label([native2unicode(hex2dec({'76' 'f4'}), 'unicode')  native2unicode(hex2dec({'63' 'a5'}), 'unicode') ' 2']);
model.sol('sol1').feature('t1').feature('aDef').label([native2unicode(hex2dec({'9a' 'd8'}), 'unicode')  native2unicode(hex2dec({'7e' 'a7'}), 'unicode') ' 1']);
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').feature('fc1').label([native2unicode(hex2dec({'51' '68'}), 'unicode')  native2unicode(hex2dec({'80' '26'}), 'unicode')  native2unicode(hex2dec({'54' '08'}), 'unicode') ' 1.1']);
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('dtech', 'auto');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 25);
model.sol('sol1').feature('t1').feature('d1').label([native2unicode(hex2dec({'76' 'f4'}), 'unicode')  native2unicode(hex2dec({'63' 'a5'}), 'unicode')  native2unicode(hex2dec({'ff' '0c'}), 'unicode')  native2unicode(hex2dec({'59' '1a'}), 'unicode')  native2unicode(hex2dec({'5b' '54'}), 'unicode')  native2unicode(hex2dec({'4e' 'cb'}), 'unicode')  native2unicode(hex2dec({'8d' '28'}), 'unicode')  native2unicode(hex2dec({'59' '1a'}), 'unicode')  native2unicode(hex2dec({'76' 'f8'}), 'unicode')  native2unicode(hex2dec({'6d' '41'}), 'unicode') ' (mfpm1) (' native2unicode(hex2dec({'5d' 'f2'}), 'unicode')  native2unicode(hex2dec({'54' '08'}), 'unicode')  native2unicode(hex2dec({'5e' '76'}), 'unicode') ')']);
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('i1').label(['AMG' native2unicode(hex2dec({'ff' '0c'}), 'unicode')  native2unicode(hex2dec({'59' '1a'}), 'unicode')  native2unicode(hex2dec({'5b' '54'}), 'unicode')  native2unicode(hex2dec({'4e' 'cb'}), 'unicode')  native2unicode(hex2dec({'8d' '28'}), 'unicode')  native2unicode(hex2dec({'59' '1a'}), 'unicode')  native2unicode(hex2dec({'76' 'f8'}), 'unicode')  native2unicode(hex2dec({'6d' '41'}), 'unicode') ' (mfpm1)']);
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 50);
model.sol('sol1').feature('t1').feature('i1').feature('ilDef').label([native2unicode(hex2dec({'4e' '0d'}), 'unicode')  native2unicode(hex2dec({'5b' '8c'}), 'unicode')  native2unicode(hex2dec({'51' '68'}), 'unicode') ' LU ' native2unicode(hex2dec({'52' '06'}), 'unicode')  native2unicode(hex2dec({'89' 'e3'}), 'unicode') ' 1']);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').label([native2unicode(hex2dec({'59' '1a'}), 'unicode')  native2unicode(hex2dec({'91' 'cd'}), 'unicode')  native2unicode(hex2dec({'7f' '51'}), 'unicode')  native2unicode(hex2dec({'68' '3c'}), 'unicode') ' 1.1']);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').label([native2unicode(hex2dec({'98' '84'}), 'unicode')  native2unicode(hex2dec({'5e' '73'}), 'unicode')  native2unicode(hex2dec({'6e' 'd1'}), 'unicode')  native2unicode(hex2dec({'56' '68'}), 'unicode') ' 1']);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').label([native2unicode(hex2dec({'54' '0e'}), 'unicode')  native2unicode(hex2dec({'5e' '73'}), 'unicode')  native2unicode(hex2dec({'6e' 'd1'}), 'unicode')  native2unicode(hex2dec({'56' '68'}), 'unicode') ' 1']);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('linerelax', 0.7);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sl1').set('relax', 0.5);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').label([native2unicode(hex2dec({'7c' '97'}), 'unicode')  native2unicode(hex2dec({'53' '16'}), 'unicode')  native2unicode(hex2dec({'6c' '42'}), 'unicode')  native2unicode(hex2dec({'89' 'e3'}), 'unicode')  native2unicode(hex2dec({'56' '68'}), 'unicode') ' 1']);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('dDef').label([native2unicode(hex2dec({'76' 'f4'}), 'unicode')  native2unicode(hex2dec({'63' 'a5'}), 'unicode') ' 2']);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').label([native2unicode(hex2dec({'76' 'f4'}), 'unicode')  native2unicode(hex2dec({'63' 'a5'}), 'unicode') ' 1.1']);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').runAll;

model.result.dataset('cpl1').set('quickx', 6000);
model.result.dataset('cpl1').set('genparaactive', true);
model.result.dataset('cpl1').set('genparadist', 'range(-6000,500,9000)');
model.result('pg7').label('CO2S');
model.result('pg7').set('data', 'surf1');
model.result('pg7').set('looplevel', [1]);
model.result('pg7').set('titletype', 'manual');
model.result('pg7').set('title', [native2unicode(hex2dec({'88' '68'}), 'unicode')  native2unicode(hex2dec({'97' '62'}), 'unicode') ': ' native2unicode(hex2dec({'4f' '53'}), 'unicode')  native2unicode(hex2dec({'79' 'ef'}), 'unicode')  native2unicode(hex2dec({'52' '06'}), 'unicode')  native2unicode(hex2dec({'65' '70'}), 'unicode') ' (1)']);
model.result('pg7').set('plotarrayenable', true);
model.result('pg7').set('arrayshape', 'square');
model.result('pg7').feature('surf1').set('data', 'surf1');
model.result('pg7').feature('surf1').set('looplevel', [5]);
model.result('pg7').feature('surf1').set('resolution', 'normal');
model.result('pg7').feature('surf2').set('data', 'surf1');
model.result('pg7').feature('surf2').set('looplevel', [11]);
model.result('pg7').feature('surf2').set('inheritplot', 'surf1');
model.result('pg7').feature('surf2').set('resolution', 'normal');
model.result('pg7').feature('surf3').set('data', 'surf1');
model.result('pg7').feature('surf3').set('looplevel', [16]);
model.result('pg7').feature('surf3').set('inheritplot', 'surf1');
model.result('pg7').feature('surf3').set('resolution', 'normal');
model.result('pg7').feature('surf4').set('data', 'surf1');
model.result('pg7').feature('surf4').set('looplevel', [21]);
model.result('pg7').feature('surf4').set('inheritplot', 'surf1');
model.result('pg7').feature('surf4').set('resolution', 'normal');
model.result('pg9').label('TEMP');
model.result('pg9').set('data', 'surf1');
model.result('pg9').set('looplevel', [1]);
model.result('pg9').set('titletype', 'manual');
model.result('pg9').set('title', [native2unicode(hex2dec({'88' '68'}), 'unicode')  native2unicode(hex2dec({'97' '62'}), 'unicode') ': ' native2unicode(hex2dec({'4f' '53'}), 'unicode')  native2unicode(hex2dec({'79' 'ef'}), 'unicode')  native2unicode(hex2dec({'52' '06'}), 'unicode')  native2unicode(hex2dec({'65' '70'}), 'unicode') ' (1)']);
model.result('pg9').set('plotarrayenable', true);
model.result('pg9').set('arrayshape', 'square');
model.result('pg9').feature('surf1').set('resolution', 'normal');
model.result('pg9').feature('surf2').set('data', 'surf1');
model.result('pg9').feature('surf2').set('looplevel', [8]);
model.result('pg9').feature('surf2').set('inheritplot', 'surf1');
model.result('pg9').feature('surf2').set('resolution', 'normal');
model.result('pg9').feature('surf3').set('data', 'surf1');
model.result('pg9').feature('surf3').set('looplevel', [11]);
model.result('pg9').feature('surf3').set('inheritplot', 'surf1');
model.result('pg9').feature('surf3').set('resolution', 'normal');
model.result('pg9').feature('surf4').set('data', 'surf1');
model.result('pg9').feature('surf4').set('looplevel', [21]);
model.result('pg9').feature('surf4').set('inheritplot', 'surf1');
model.result('pg9').feature('surf4').set('resolution', 'normal');
model.result('pg8').label('PORO');
model.result('pg8').set('data', 'surf1');
model.result('pg8').set('looplevel', [1]);
model.result('pg8').set('titletype', 'manual');
model.result('pg8').set('title', [native2unicode(hex2dec({'88' '68'}), 'unicode')  native2unicode(hex2dec({'97' '62'}), 'unicode') ': ' native2unicode(hex2dec({'4f' '53'}), 'unicode')  native2unicode(hex2dec({'79' 'ef'}), 'unicode')  native2unicode(hex2dec({'52' '06'}), 'unicode')  native2unicode(hex2dec({'65' '70'}), 'unicode') ' (1)']);
model.result('pg8').set('plotarrayenable', true);
model.result('pg8').set('arrayshape', 'square');
model.result('pg8').feature('surf1').set('resolution', 'normal');
model.result('pg8').feature('surf2').set('data', 'surf1');
model.result('pg8').feature('surf2').set('looplevel', [1]);
model.result('pg8').feature('surf2').set('inheritplot', 'surf1');
model.result('pg8').feature('surf2').set('resolution', 'normal');
model.result('pg8').feature('surf3').set('data', 'surf1');
model.result('pg8').feature('surf3').set('looplevel', [1]);
model.result('pg8').feature('surf3').set('inheritplot', 'surf1');
model.result('pg8').feature('surf3').set('resolution', 'normal');
model.result('pg8').feature('surf4').set('data', 'surf1');
model.result('pg8').feature('surf4').set('looplevel', [1]);
model.result('pg8').feature('surf4').set('inheritplot', 'surf1');
model.result('pg8').feature('surf4').set('resolution', 'normal');
model.result('pg10').label('PERM');
model.result('pg10').set('data', 'surf1');
model.result('pg10').set('looplevel', [1]);
model.result('pg10').set('titletype', 'manual');
model.result('pg10').set('title', [native2unicode(hex2dec({'88' '68'}), 'unicode')  native2unicode(hex2dec({'97' '62'}), 'unicode') ': ' native2unicode(hex2dec({'4f' '53'}), 'unicode')  native2unicode(hex2dec({'79' 'ef'}), 'unicode')  native2unicode(hex2dec({'52' '06'}), 'unicode')  native2unicode(hex2dec({'65' '70'}), 'unicode') ' (1)']);
model.result('pg10').set('plotarrayenable', true);
model.result('pg10').set('arrayshape', 'square');
model.result('pg10').feature('surf1').set('resolution', 'normal');
model.result('pg10').feature('surf2').set('data', 'surf1');
model.result('pg10').feature('surf2').set('looplevel', [1]);
model.result('pg10').feature('surf2').set('inheritplot', 'surf1');
model.result('pg10').feature('surf2').set('resolution', 'normal');
model.result('pg10').feature('surf3').set('data', 'surf1');
model.result('pg10').feature('surf3').set('looplevel', [1]);
model.result('pg10').feature('surf3').set('inheritplot', 'surf1');
model.result('pg10').feature('surf3').set('resolution', 'normal');
model.result('pg10').feature('surf4').set('data', 'surf1');
model.result('pg10').feature('surf4').set('looplevel', [1]);
model.result('pg10').feature('surf4').set('inheritplot', 'surf1');
model.result('pg10').feature('surf4').set('resolution', 'normal');
model.result.export('data1').set('looplevelinput', {'manual'});
model.result.export('data1').set('expr', {'s2' 'Temp'});
model.result.export('data1').set('unit', {'1' 'K'});
model.result.export('data1').set('descr', {[native2unicode(hex2dec({'4f' '53'}), 'unicode')  native2unicode(hex2dec({'79' 'ef'}), 'unicode')  native2unicode(hex2dec({'52' '06'}), 'unicode')  native2unicode(hex2dec({'65' '70'}), 'unicode') ] 'Geothermal temperature distribution'});
% model.result.export('data1').set('filename', 'C:\Users\21501\Desktop\matlab2\co2.csv');
model.result.export('data1').set('location', 'regulargrid');
model.result.export('data1').set('regulargridx3', 32);
model.result.export('data1').set('regulargridy3', 32);
model.result.export('data1').set('regulargridz3', 16);
model.result.export('data1').set('includenan', false);
model.result.export('data1').set('recover', 'ppr');
model.result.export('data1').set('separator', ',');
model.result.export('img1').label('co2');
model.result.export('img1').set('sourceobject', 'pg7');
% model.result.export('img1').set('pngfilename', 'C:\Users\21501\Desktop\matlab2\co2.png');
model.result.export('img1').set('size', 'current');
model.result.export('img1').set('unit', 'px');
model.result.export('img1').set('height', '600');
model.result.export('img1').set('width', '800');
model.result.export('img1').set('lockratio', 'off');
model.result.export('img1').set('resolution', '96');
model.result.export('img1').set('antialias', 'on');
model.result.export('img1').set('zoomextents', 'off');
model.result.export('img1').set('fontsize', '9');
model.result.export('img1').set('colortheme', 'globaltheme');
model.result.export('img1').set('customcolor', [1 1 1]);
model.result.export('img1').set('background', 'color');
model.result.export('img1').set('gltfincludelines', 'on');
model.result.export('img1').set('title1d', 'on');
model.result.export('img1').set('legend1d', 'on');
model.result.export('img1').set('logo1d', 'on');
model.result.export('img1').set('options1d', 'on');
model.result.export('img1').set('title2d', 'on');
model.result.export('img1').set('legend2d', 'on');
model.result.export('img1').set('logo2d', 'on');
model.result.export('img1').set('options2d', 'off');
model.result.export('img1').set('title3d', 'on');
model.result.export('img1').set('legend3d', 'on');
model.result.export('img1').set('logo3d', 'on');
model.result.export('img1').set('options3d', 'off');
model.result.export('img1').set('axisorientation', 'on');
model.result.export('img1').set('grid', 'on');
model.result.export('img1').set('axes1d', 'on');
model.result.export('img1').set('axes2d', 'on');
model.result.export('img1').set('showgrid', 'on');
model.result.export('img1').set('target', 'file');
model.result.export('img1').set('qualitylevel', '92');
model.result.export('img1').set('qualityactive', 'off');
model.result.export('img1').set('imagetype', 'png');
model.result.export('img1').set('lockview', 'off');
model.result.export('img2').label('temp');
model.result.export('img2').set('sourceobject', 'pg9');
% model.result.export('img2').set('pngfilename', 'temp');
model.result.export('img2').set('size', 'current');
model.result.export('img2').set('unit', 'px');
model.result.export('img2').set('height', '600');
model.result.export('img2').set('width', '800');
model.result.export('img2').set('lockratio', 'off');
model.result.export('img2').set('resolution', '96');
model.result.export('img2').set('antialias', 'on');
model.result.export('img2').set('zoomextents', 'off');
model.result.export('img2').set('fontsize', '9');
model.result.export('img2').set('colortheme', 'globaltheme');
model.result.export('img2').set('customcolor', [1 1 1]);
model.result.export('img2').set('background', 'color');
model.result.export('img2').set('gltfincludelines', 'on');
model.result.export('img2').set('title1d', 'on');
model.result.export('img2').set('legend1d', 'on');
model.result.export('img2').set('logo1d', 'on');
model.result.export('img2').set('options1d', 'on');
model.result.export('img2').set('title2d', 'on');
model.result.export('img2').set('legend2d', 'on');
model.result.export('img2').set('logo2d', 'on');
model.result.export('img2').set('options2d', 'off');
model.result.export('img2').set('title3d', 'on');
model.result.export('img2').set('legend3d', 'on');
model.result.export('img2').set('logo3d', 'on');
model.result.export('img2').set('options3d', 'off');
model.result.export('img2').set('axisorientation', 'on');
model.result.export('img2').set('grid', 'on');
model.result.export('img2').set('axes1d', 'on');
model.result.export('img2').set('axes2d', 'on');
model.result.export('img2').set('showgrid', 'on');
model.result.export('img2').set('target', 'file');
model.result.export('img2').set('qualitylevel', '92');
model.result.export('img2').set('qualityactive', 'off');
model.result.export('img2').set('imagetype', 'png');
model.result.export('img2').set('lockview', 'off');

% model.component('comp1').func('int1').discardData;
% model.component('comp1').func('int2').discardData;
% model.component('comp1').func('int1').importData;
% model.component('comp1').func('int2').importData;
% 
% model.component('comp1').geom('geom1').run('difsel2');
% 
% model.component('comp1').mesh('mesh1').run;
% 
% 
% model.label('use_for_maml.mph');

model.result.export.create('img3', 'Image');
model.result.export('img3').set('size', 'current');
model.result.export('img3').set('unit', 'px');
model.result.export('img3').set('height', '600');
model.result.export('img3').set('width', '800');
model.result.export('img3').set('lockratio', 'off');
model.result.export('img3').set('resolution', '96');
model.result.export('img3').set('antialias', 'on');
model.result.export('img3').set('zoomextents', 'off');
model.result.export('img3').set('fontsize', '9');
model.result.export('img3').set('colortheme', 'globaltheme');
model.result.export('img3').set('customcolor', [1 1 1]);
model.result.export('img3').set('background', 'color');
model.result.export('img3').set('gltfincludelines', 'on');
model.result.export('img3').set('title1d', 'on');
model.result.export('img3').set('legend1d', 'on');
model.result.export('img3').set('logo1d', 'on');
model.result.export('img3').set('options1d', 'on');
model.result.export('img3').set('title2d', 'on');
model.result.export('img3').set('legend2d', 'on');
model.result.export('img3').set('logo2d', 'on');
model.result.export('img3').set('options2d', 'off');
model.result.export('img3').set('title3d', 'on');
model.result.export('img3').set('legend3d', 'on');
model.result.export('img3').set('logo3d', 'on');
model.result.export('img3').set('options3d', 'off');
model.result.export('img3').set('axisorientation', 'on');
model.result.export('img3').set('grid', 'on');
model.result.export('img3').set('axes1d', 'on');
model.result.export('img3').set('axes2d', 'on');
model.result.export('img3').set('showgrid', 'on');
model.result.export('img3').set('target', 'file');
model.result.export('img3').set('qualitylevel', '92');
model.result.export('img3').set('qualityactive', 'off');
model.result.export('img3').set('imagetype', 'png');
model.result.export('img3').set('lockview', 'off');

model.result.export('img3').label('perm');
model.result('pg8').run;
model.result.export.create('img4', 'Image');
model.result.export('img4').set('size', 'current');
model.result.export('img4').set('unit', 'px');
model.result.export('img4').set('height', '600');
model.result.export('img4').set('width', '800');
model.result.export('img4').set('lockratio', 'off');
model.result.export('img4').set('resolution', '96');
model.result.export('img4').set('antialias', 'on');
model.result.export('img4').set('zoomextents', 'off');
model.result.export('img4').set('fontsize', '9');
model.result.export('img4').set('colortheme', 'globaltheme');
model.result.export('img4').set('customcolor', [1 1 1]);
model.result.export('img4').set('background', 'color');
model.result.export('img4').set('gltfincludelines', 'on');
model.result.export('img4').set('title1d', 'on');
model.result.export('img4').set('legend1d', 'on');
model.result.export('img4').set('logo1d', 'on');
model.result.export('img4').set('options1d', 'on');
model.result.export('img4').set('title2d', 'on');
model.result.export('img4').set('legend2d', 'on');
model.result.export('img4').set('logo2d', 'on');
model.result.export('img4').set('options2d', 'off');
model.result.export('img4').set('title3d', 'on');
model.result.export('img4').set('legend3d', 'on');
model.result.export('img4').set('logo3d', 'on');
model.result.export('img4').set('options3d', 'off');
model.result.export('img4').set('axisorientation', 'on');
model.result.export('img4').set('grid', 'on');
model.result.export('img4').set('axes1d', 'on');
model.result.export('img4').set('axes2d', 'on');
model.result.export('img4').set('showgrid', 'on');
model.result.export('img4').set('target', 'file');
model.result.export('img4').set('qualitylevel', '92');
model.result.export('img4').set('qualityactive', 'off');
model.result.export('img4').set('imagetype', 'png');
model.result.export('img4').set('lockview', 'off');

model.result.export('img4').set('sourceobject', 'pg8');
model.result.export('img3').set('sourceobject', 'pg10');
model.result.export('img4').set('pngfilename', 'E:\matlab2\poro.png');
model.result.export('img4').label('poro');



savename_s2t=strcat(savedir,'label_s',num2str(sample_num),'.csv');
savename_co2=strcat(savedir,'co2_s',num2str(sample_num),'.png');
savename_temp=strcat(savedir,'temp_s',num2str(sample_num),'.png');
savename_poro=strcat(savedir,'poro_s',num2str(sample_num),'.png');
savename_perm=strcat(savedir,'perm_s',num2str(sample_num),'.png');

model.result.export('img3').set('pngfilename', savename_perm);
model.result.export('img4').set('pngfilename', savename_poro);
model.result.export('data1').set('filename',savename_s2t);
model.result.export('img1').set('pngfilename', savename_co2);
model.result.export('img2').set('pngfilename', savename_temp);

model.result('pg7').run;
model.result.export('data1').run;
model.result.export('img1').run;
model.result.export('img2').run;
% model.result.export('img3').run;
% model.result.export('img4').run;

